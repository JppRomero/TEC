# Recomendador de Pel√≠culas para Universitarios, programa en Python el cual recomienda pel√≠culas seg√∫n el g√©nero que el usuario prefiera.
# Juan Pablo Romero Anaya, A01715182, 10/10/25  
print("\n")
# La Bienvenida, la creamos como variable para poder modificarla f√°cilmente
bienvenida = "Bienvenid@ Universitari@, al Recomendador de Pel√≠culas para Universitarios. "  
print ( bienvenida )

print ( "Descubre qu√© ver en tus ratos libres." )
print ( "Antes de Recomendarte una Pel√≠cula, responde unas preguntas" ) 
# Aqu√≠ empieza el programa y le damos la bienvenida al usuario
print("\n")

# Preguntas de gusto por g√©nero
miedo_punt = int(input( "Del 0 al 100, ¬øCu√°nto te gustan las pel√≠culas de Miedo?: " ))
comedia_punt = int(input( "Del 0 al 100, ¬øCu√°nto te gustan las pel√≠culas de Comedia?: " ))

def punt (miedo_punt, comedia_punt): # Funci√≥n para calcular el promedio de gusto por g√©nero
    if (miedo_punt <= 100 and comedia_punt <= 100):
        promediopunt = float( miedo_punt + comedia_punt ) / 2
        print ( f" Tu promedio entre Miedo y Comedia es: {promediopunt} ")
        if miedo_punt < comedia_punt:
            print ( "Ahhh, te gusta m√°s la comedia!!!" )
        else:
            print ( "Ahhh, te gusta m√°s el miedo!!!" )
    else:
        print (" El valor ten√≠a que ser de un rango del 0 al 100, para el miedo y comedia.")
punt (miedo_punt, comedia_punt) # Llamada a la funci√≥n punt, para calcular el promedio de gusto por g√©nero


def mi_punt (md, cm): # Funci√≥n para comparar con los gustos del creador del programa
    if md < cm:
        return "Fijate que al creador del programa le Gusta m√°s la Comedia!"
    else:
        return "Fijate que al creador del programa le Gusta m√°s el Miedoooo!"
    
print(mi_punt (20, 90) ) # Llamada a la funci√≥n mi_punt, para comparar con los gustos del creador del programa
print("\n")

print ("Hay 5 g√©neros de pelis elige la cu√°l te guste m√°s: acci√≥n, comedia, drama, terror y animaci√≥n !! ") # Indicamos los g√©neros disponibles
print("\n")

generos = ["acci√≥n", "comedia", "drama", "terror", "animaci√≥n"] # Lista de g√©neros disponibles

def pelis (generos): # Funci√≥n para responder seg√∫n el g√©nero elegido
    if (generos == "acci√≥n"):
        return "Elegiste Acci√≥n, prep√°rate para lo chido!!!."
    elif (generos == "comedia"):
        return "Elegiste Comedia, te vas a re√≠r mucho!!!."
    elif (generos == "drama"):
        return "Elegiste Drama, algo m√°s serio y profundo, me encanta!!!."
    elif (generos == "terror"):
        return "Elegiste Terror, ¬°prep√°rate para asustarte, hahaha!!!"
    elif (generos == "animaci√≥n"):
        return "Elegiste Animaci√≥n, siempre divertidas."

i = 0 # Bucle para validar la entrada del usuario
while i < 2:
    eleccionsinm = input ("")
    eleccion = eleccionsinm.lower() # usamos la funci√≥n predefinida lower para evitar errores de may√∫sculas y min√∫sculas

    if eleccion in generos: # Validamos que la entrada est√© en la lista de g√©neros
        print (pelis (eleccion))
        i = i + 3
    else:        # Si la entrada no es v√°lida, pedimos que ingrese de nuevo
        print ("Opci√≥n No Valida, Intenta de Nuevo: ")
        i = i + 0

accionb = {  # Diccionario con las pel√≠culas recomendadas por plataforma para cada g√©nero
    
    "Ô∏è‚ö™Ô∏è DISNEY +" : ["ROGUE ONE", "PIRATAS DEL CARIBE"],
    "üîµ PRIME VIDEO" : ["TOP GUN MAVERICK", "DANGER IN THE MOUNTAIN"],
    "üî¥ NETFLIX" : ["THE KILLER", "RED NOTICE"],
    "üü£Ô∏è HBO MAX" : ["MAD MAX, FURY ROAD", "KONG, SKULL ISLAND"],
    "üü† PARAMOUNT PLUS" : ["TRANSFORMERS, AGE OF EXTINCTION", "BUMBLEBLEE"],
    "‚ö´Ô∏è APPLE TV+" : ["THE GORGE", "THE FAMILY PLAN"]
    }

comediab = {
    "‚ö™Ô∏èÔ∏è DISNEY +" : ["HOME ALONE", "THE PRINCESS DIARIES"],
    "üîµ PRIME VIDEO" : ["THE UNDERDOGGS", "ANYTHINGS POSSIBLE"],
    "üî¥ NETFLIX" : ["DO REVENGE", "ME TIME"],
    "üü£Ô∏è HBO MAX" : ["FREE GUY", "THE 40-YEAR OLD VIRGIN"],
    "üü†Ô∏è PARAMOUNT PLUS" : ["MEAN GIRLS", "HOW TO LOSE A GUY IN 10 DAYS"],
    "‚ö´Ô∏è APPLE TV+" : ["FLORA AND SON", "ON THE ROCKS"]
    }

dramab = {
    "‚ö™Ô∏èÔ∏è DISNEY +" : ["TITANIC", "BOHEMIAN RHAPSODY"],
    "üîµÔ∏è PRIME VIDEO" : ["PARASITE", "ARGENTINA - 1985"],
    "üî¥ NETFLIX" : ["ROMA", "MARRIAGE STORY"],
    "üü£Ô∏è HBO MAX" : ["JOKER", "GOODFELLAS"],
    "üü†Ô∏è PARAMOUNT PLUS" : ["GOOD WILL HUNTING", "AMERICAN BEAUTY"],
    "‚ö´Ô∏è APPLE TV+" : ["PALMER", "FINCH"]
    }

terrorb = {
    "‚ö™Ô∏è DISNEY +" : ["LA SAGA DEL ALIEN", "THE EXORCIST"],
    "üîµ PRIME VIDEO" : ["TALK TO ME", "MIDSOMMAR"],
    "üî¥ NETFLIX" : ["FEAR STREET", "EL HOYO"],
    "üü£Ô∏è HBO MAX" : ["THE CONJURING", "THE SHINING"],
    "üü†Ô∏è PARAMOUNT PLUS" : ["SMILE", "SCREAM (CUALQUIERA)"],
    "‚ö´Ô∏è APPLE TV+" : ["SERVANT", "THE LOST BUS"]
    }

animaci√≥nb = {
    "‚ö™Ô∏èÔ∏è DISNEY +" : ["COCO", "INSIDE OUT 2"],
    "üîµ PRIME VIDEO" : ["GHOST IN THE SHELL", "RANGO"],
    "üî¥ NETFLIX" : ["PINOCHO (GUILLERMO DEL TORO)", "MITCHELLS CONTRA LAS M√ÅQUINAS"],
    "üü£Ô∏è HBO MAX" : ["EL VIAJE DE CHIHIRO", "PRINCESA MONONOKE"],
    "üü†Ô∏è PARAMOUNT PLUS" : ["BOB ESPONJA", "LOS PING√úINOS DE MADAGASCAR"],
    "‚ö´Ô∏è APPLE TV+" : ["WOLFWALKERS", "LUCK"]
    }
    

# Condicionales para mostrar las pel√≠culas recomendadas seg√∫n el g√©nero elegido
if (eleccion == "acci√≥n"): 
    for plataformas, pelis in accionb.items():
        print (f"\n {plataformas}:")
        for peli in pelis:
            print (f"\n - {peli}")
            
elif (eleccion == "comedia"):
    for plataformas, pelis in comediab.items():
        print(f"\n {plataformas}:")
        for peli in pelis:
            print (f"\n - {peli}")
            
elif (eleccion == "drama"):
    for plataformas, pelis in dramab.items():
        print(f"\n {plataformas}:")
        for peli in pelis:
            print (f"\n - {peli}")

elif (eleccion == "terror"):
    for plataformas, pelis in terrorb.items():
        print(f"\n {plataformas}:")
        for peli in pelis:
            print (f"\n - {peli}")
            
elif (eleccion == "animaci√≥n"):
    for plataformas, pelis in animaci√≥nb.items():
        print(f"\n {plataformas}:")
        for peli in pelis:
            print (f"\n - {peli}")
 # Aqu√≠ terminan las recomendaciones de pel√≠culas seg√∫n el g√©nero elegido
            
calificacion = int(input( "\n Del 0 al 100, ¬øQu√© calificaci√≥n le das a este recomendador de pelis?: " )) # Preguntamos la calificaci√≥n del usuario

def calif (calificacion): # Funci√≥n para responder seg√∫n la calificaci√≥n dada
    if (calificacion <= 100):
        return f"Gracias por calificar con un {calificacion}, seguiremos mejorando!!"
    else:
        return "El valor ten√≠a que ser de un rango del 0 al 100."
print (calif (calificacion) ) # Llamada a la funci√≥n calif, para responder seg√∫n la calificaci√≥n dada

mi_fav = [["Acci√≥n"], ["Avengers Endgame"]] # Lista con el g√©nero y pel√≠cula favorita del creador del programa

print ( f"Por cierto, mi g√©nero favorito y peli es: \n {mi_fav[0][0]} y {mi_fav[1][0]}. ") # Mostramos el g√©nero y pel√≠cula favorita del creador del programa
print("\n")

# Modificamos la variable bienvenida para el mensaje final
final = bienvenida.replace( "Bienvenid@ Universitari@, al", "Gracias por usar el" ) #usamos la funci√≥n predefinida replace para modificar la variable bienvenida 
print ( final ) 
print ( "Juan Pablo Romero Anaya, TEC DE MONTERREY, 10/10/25, A01715182" )    # Cr√©ditos del programa
print ( "Fin del Programa" ) 
# faltaria el tema de archivos

# Aqu√≠ termina el programa


    